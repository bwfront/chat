// Generated by Xata Codegen 0.28.3. Please do not edit.
import { buildClient } from "@xata.io/client";
import type {
  BaseClientOptions,
  SchemaInference,
  XataRecord,
} from "@xata.io/client";

const tables = [
  {
    name: "users",
    columns: [
      { name: "username", type: "string" },
      { name: "uid", type: "string", defaultValue: "null" },
      { name: "imageUrl", type: "string" },
    ],
  },
  { name: "pchat", columns: [{ name: "participants", type: "multiple" }] },
  {
    name: "messages",
    columns: [
      { name: "chatid", type: "string" },
      { name: "message", type: "string" },
      { name: "sender", type: "string" },
      { name: "reciver", type: "string" },
    ],
  },
] as const;

export type SchemaTables = typeof tables;
export type InferredTypes = SchemaInference<SchemaTables>;

export type Users = InferredTypes["users"];
export type UsersRecord = Users & XataRecord;

export type Pchat = InferredTypes["pchat"];
export type PchatRecord = Pchat & XataRecord;

export type Messages = InferredTypes["messages"];
export type MessagesRecord = Messages & XataRecord;

export type DatabaseSchema = {
  users: UsersRecord;
  pchat: PchatRecord;
  messages: MessagesRecord;
};

const DatabaseClient = buildClient();

const defaultOptions = {
  databaseURL:
    "https://BennetWitczak-s-workspace-uffijn.eu-central-1.xata.sh/db/chat",
};

export class XataClient extends DatabaseClient<DatabaseSchema> {
  constructor(options?: BaseClientOptions) {
    super({ ...defaultOptions, ...options,}, tables);
  }
}

let instance: XataClient | undefined = undefined;

export const getXataClient = () => {
  if (instance) return instance;

  instance = new XataClient();
  return instance;
};
